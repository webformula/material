:host {
  position: relative;
  display: inline-flex;
  flex-shrink: 0;
  outline: none;
  -webkit-tap-highlight-color: transparent;
  height: 40px;
  width: 40px;
  justify-content: center;
  border-radius: var(--mdw-shape-full);
  color: var(--mdw-primary);
}

:host([disabled]) {
  pointer-events: none;
}

button {
  place-items: center;
  background: none;
  border: none;
  box-sizing: border-box;
  cursor: pointer;
  display: flex;
  place-content: center;
  outline: none;
  padding: 0;
  position: relative;
  text-decoration: none;
  user-select: none;
  z-index: 0;
  flex: 1;
  border-radius: inherit;
  color: inherit;
}

:host(.filled) {
  color: var(--mdw-on-primary);
  background-color: var(--mdw-primary);
}

:host(.filled-tonal) {
  color: var(--mdw-on-secondary-container);
  background-color: var(--mdw-secondary-container);
}

:host(.elevated) {
  color: var(--mdw-primary);
  background-color: var(--mdw-surface-container-low);
  box-shadow: var(--mdw-elevation-1);
}

:host(.outlined) {
  color: var(--mdw-primary);
  background-color: var(--mdw-button-outlined-container-color);
  border: 1px solid var(--mdw-outline);
}

:host(.selected:not(.selected-icon)) ::slotted(mdw-icon) {
  font-variation-settings:
      'FILL' 1,
      'wght' 400,
      'GRAD' 0,
      'opsz' 48 !important
}

:host(.selected.filled:not(.selected-icon)) ::slotted(mdw-icon),
:host(.selected.filled-tonal:not(.selected-icon)) ::slotted(mdw-icon) {
  font-variation-settings:
    'FILL' 0,
    'wght' 400,
    'GRAD' 0,
    'opsz' 48 !important
}

:host(.selected.selected-icon) slot.default-slot::slotted(mdw-icon),
:host(.selected-icon) slot[name="selected"]::slotted(mdw-icon) {
  display: none;
}

:host(.selected.selected-icon) slot[name="selected"]::slotted(mdw-icon) {
  display: block;
}



/* --- states --- */

.state-layer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  opacity: 0;
  pointer-events: none;
  transition-duration: var(--mdw-motion-duration-medium1);
  transition-timing-function: var(--mdw-motion-easing-standard);
  transition-property: opacity;
}

:host(:focus) .state-layer {
  opacity: var(--mdw-state-layer-opacity-focus);
  background-color: var(--mdw-on-surface);
}

:host(:focus.filled) .state-layer {
  opacity: var(--mdw-state-layer-opacity-focus);
  background-color: var(--mdw-on-primary);
}

:host(:focus.filled) {
  box-shadow: var(--mdw-elevation-1);
}

:host(:focus.filled-tonal) .state-layer {
  opacity: var(--mdw-state-layer-opacity-focus);
  background-color: var(--mdw-on-secondary-container);
}

:host(:focus.elevated) .state-layer {
  opacity: var(--mdw-state-layer-opacity-focus);
  background-color: var(--mdw-button-elevate-state-layer-color);
}

:host(:focus.outlined) .state-layer {
  opacity: var(--mdw-state-layer-opacity-focus);
  background-color: var(--mdw-primary);
}

:host(:focus.elevated),
:host(:focus.filled),
:host(:focus.filled-tonal) {
  transition-duration: var(--mdw-motion-duration-medium1);
  transition-timing-function: var(--mdw-motion-easing-standard);
  transition-property: box-shadow;
}

@media (hover: hover) {

  :host(:hover.elevated),
  :host(:hover.filled),
  :host(:hover.filled-tonal) {
    transition-duration: var(--mdw-motion-duration-medium1);
    transition-timing-function: var(--mdw-motion-easing-standard);
    transition-property: box-shadow;
  }

  :host(:hover) .state-layer {
    opacity: var(--mdw-state-layer-opacity-hover);
    background-color: var(--mdw-primary);
  }

  :host(:hover.filled) .state-layer {
    opacity: var(--mdw-state-layer-opacity-hover);
    background-color: var(--mdw-on-primary);
  }

  :host(:hover.filled-tonal) .state-layer {
    opacity: var(--mdw-state-layer-opacity-hover);
    background-color: var(--mdw-on-secondary-container);
  }

  :host(:hover.filled),
  :host(:hover.filled-tonal) {
    box-shadow: var(--mdw-elevation-1);
  }

  :host(:hover.elevated) .state-layer {
    opacity: var(--mdw-state-layer-opacity-hover);
    background-color: var(--mdw-primary);
  }

  :host(:hover.elevated) {
    box-shadow: var(--mdw-elevation-2);
  }

  :host(:hover.outlined) .state-layer {
    opacity: var(--mdw-state-layer-opacity-hover);
    background-color: var(--mdw-primary);
  }
}



/* --- Ripple --- */

.ripple {
  overflow: hidden;
  border-radius: inherit;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  pointer-events: none;
}

.ripple > .mdw-ripple-element {
  background-color: var(--mdw-primary);
  opacity: var(--mdw-state-layer-opacity-pressed);
  border-radius: var(--mdw-shape-full);
}

:host(.filled) .ripple > .mdw-ripple-element {
  background-color: var(--mdw-on-primary);
}

:host(.elevated) .ripple > .mdw-ripple-element {
  background-color: var(--mdw-primary);
}

:host(.filled-tonal) .ripple > .mdw-ripple-element {
  background-color: var(--mdw-on-secondary-container);
}
