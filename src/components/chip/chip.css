:host {
  display: inline-flex;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  border-radius: var(--mdw-shape-small);
  box-sizing: border-box;
  display: flex;
  height: 32px;
  position: relative;
  outline: none;
  user-select: none;
  white-space: nowrap;
  align-items: center;
  padding-inline: 16px;
  border: 1px solid var(--mdw-outline);
}

:host([disabled]) {
  pointer-events: none;
}

:host(.elevated) {
  box-shadow: var(--mdw-elevation-1);
  border: none;
  background-color: var(--mdw-surface-container-low);
}

:host(.checked),
:host(.elevated.checked) {
  background-color: var(--mdw-secondary-container);
}

.label {
  font-size: var(--mdw-font-large-label-size);
  font-weight: var(--mdw-font-large-label-weight);
  letter-spacing: var(--mdw-font-large-label-tracking);
  line-height: var(--mdw-font-large-label-line-height);
  color: var(--mdw-on-surface);
  text-overflow: ellipsis;
}

::slotted(mdw-icon) {
  margin-right: 5px;
  margin-left: -5px;
  width: var(--mdw-font-small-icon-size);
  height: var(--mdw-font-small-icon-size);
  font-size: var(--mdw-font-small-icon-size);
  line-height: var(--mdw-font-small-icon-size);
}

:host([filter].checked) ::slotted(mdw-icon),
:host([filter-menu].checked) ::slotted(mdw-icon) {
  display: none;
}


.clear,
.check {
  display: none;
}

:host([input]) .clear,
:host([filter]) .check {
  position: relative;
  color: var(--mdw-primary);
  width: 18px;
  height: 18px;
  align-self: center;
  margin-top: -6px;
  margin-right: 8px;
  margin-left: -6px;
}

:host([input]) .clear:after {
  position: absolute;
  content: '';
  top: -1px;
  left: -1px;
  right: -3px;
  bottom: -3px;
  border-radius: 8px;
}

:host([filter]) .check {
  margin-top: -6px;
  margin-right: 8px;
  margin-left: -6px;
  pointer-events: none;
}

:host([input]) .clear {
  margin-left: 8px;
  margin-right: -4px;
  margin-top: -1px;
  cursor: pointer;
}

:host([input]) .clear {
  display: block;
}

:host([filter].checked) .check {
  display: block;
}


.menu-arrow {
  display: none;
}

:host(.menu) .menu-arrow {
  display: block;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom: 5px solid var(--mdw-on-surface-alpha-60);
  margin-left: 8px;
  margin-right: -4px;
  transform-origin: center;
  transform: rotate(-180deg);
  transition: transform var(--mdw-motion-duration-short3);
  pointer-events: none;
}

:host(.menu:focus) .menu-arrow {
  transform: rotate(0);
}




input {
  opacity: 0;
  display: none;
  position: absolute;
  /* this is needed for type time on ios */
  box-sizing: border-box;
  border: none;
  background: none;
  outline: none;
  padding: 0;
  margin: 0;
  min-width: 0;

  text-decoration: inherit;
  text-transform: inherit;
  font-size: var(--mdw-font-large-label-size);
  font-weight: var(--mdw-font-large-label-weight);
  letter-spacing: var(--mdw-font-large-label-tracking);
  color: var(--mdw-on-surface);
  caret-color: var(--mdw-primary);

  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

:host([input][edit]) input {
  display: block;
  pointer-events: none;
  top: 0;
  left: 0;
  bottom: 0;
}

:host(.edit-mode) input {
  opacity: 1;
}

:host(.edit-mode) .state-layer,
:host(.edit-mode) .ripple,
:host(.edit-mode) .clear,
:host(.edit-mode) .label {
  display: none;
}

:host(.edit-mode) {
  border: none;
}


.state-layer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--mdw-shape-small);
  background-color: var(--mdw-on-surface);
  opacity: 0;
  pointer-events: none;
}

:host(:focus) .state-layer {
  opacity: var(--mdw-state-layer-opacity-hover);
}

@media (hover: hover) {
  :host(:hover.elevated) {
    box-shadow: var(--mdw-elevation-2);
  }

  :host(:hover) .state-layer {
    opacity: var(--mdw-state-layer-opacity-hover);
  }

  :host([input]) .clear:hover::after {
    background-color: var(--mdw-on-surface-alpha-12);
  }
}


/* --- Ripple --- */

.ripple {
  overflow: hidden;
  border-radius: inherit;
  transform: translateZ(0);
  /* fixes bug on ios safari */
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  pointer-events: none;
}

.ripple > .ripple-element {
  background-color: var(--mdw-primary);
  opacity: var(--mdw-state-layer-opacity-pressed);
}
